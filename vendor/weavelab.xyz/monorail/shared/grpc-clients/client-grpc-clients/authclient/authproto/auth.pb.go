// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package authproto is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	UserRequest
	FindByUsernameRequest
	LocationUserRequest
	User
	Profile
	Location
	Role
	UserSearch
	UsersRequest
	UsersResponse
	LoginRequest
	ClientMetadata
	LoginResponse
	PublicKeyResponse
	RefreshTokenRequest
	EmptyRequest
	OauthLoginRequset
	OauthLoginResponse
*/
package authproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import wgrpcprotouuid "weavelab.xyz/monorail/shared/wlib/wgrpc/wgrpcproto/wgrpcprotouuid"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusType int32

const (
	StatusType_Legacy   StatusType = 0
	StatusType_Invited  StatusType = 1
	StatusType_Active   StatusType = 2
	StatusType_Disabled StatusType = 3
)

var StatusType_name = map[int32]string{
	0: "Legacy",
	1: "Invited",
	2: "Active",
	3: "Disabled",
}
var StatusType_value = map[string]int32{
	"Legacy":   0,
	"Invited":  1,
	"Active":   2,
	"Disabled": 3,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}
func (StatusType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UserRequest struct {
	UserID string `protobuf:"bytes,2,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *UserRequest) Reset()                    { *m = UserRequest{} }
func (m *UserRequest) String() string            { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()               {}
func (*UserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type FindByUsernameRequest struct {
	Username string `protobuf:"bytes,1,opt,name=Username" json:"Username,omitempty"`
}

func (m *FindByUsernameRequest) Reset()                    { *m = FindByUsernameRequest{} }
func (m *FindByUsernameRequest) String() string            { return proto.CompactTextString(m) }
func (*FindByUsernameRequest) ProtoMessage()               {}
func (*FindByUsernameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FindByUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type LocationUserRequest struct {
	LocationID string `protobuf:"bytes,1,opt,name=LocationID" json:"LocationID,omitempty"`
	UserID     string `protobuf:"bytes,2,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *LocationUserRequest) Reset()                    { *m = LocationUserRequest{} }
func (m *LocationUserRequest) String() string            { return proto.CompactTextString(m) }
func (*LocationUserRequest) ProtoMessage()               {}
func (*LocationUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LocationUserRequest) GetLocationID() string {
	if m != nil {
		return m.LocationID
	}
	return ""
}

func (m *LocationUserRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type User struct {
	UserID                 string                     `protobuf:"bytes,1,opt,name=UserID" json:"UserID,omitempty"`
	Username               string                     `protobuf:"bytes,2,opt,name=Username" json:"Username,omitempty"`
	Type                   string                     `protobuf:"bytes,3,opt,name=Type" json:"Type,omitempty"`
	FirstName              string                     `protobuf:"bytes,4,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName               string                     `protobuf:"bytes,5,opt,name=LastName" json:"LastName,omitempty"`
	Locations              []*Location                `protobuf:"bytes,6,rep,name=Locations" json:"Locations,omitempty"`
	Password               string                     `protobuf:"bytes,7,opt,name=Password" json:"Password,omitempty"`
	Status                 StatusType                 `protobuf:"varint,8,opt,name=Status,enum=authproto.StatusType" json:"Status,omitempty"`
	MobileNumber           string                     `protobuf:"bytes,9,opt,name=MobileNumber" json:"MobileNumber,omitempty"`
	MobileNumberVerifiedAt *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=MobileNumberVerifiedAt" json:"MobileNumberVerifiedAt,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *User) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_Legacy
}

func (m *User) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *User) GetMobileNumberVerifiedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.MobileNumberVerifiedAt
	}
	return nil
}

type Profile struct {
	UserID                 string                     `protobuf:"bytes,1,opt,name=UserID" json:"UserID,omitempty"`
	Username               string                     `protobuf:"bytes,2,opt,name=Username" json:"Username,omitempty"`
	Type                   string                     `protobuf:"bytes,3,opt,name=Type" json:"Type,omitempty"`
	FirstName              string                     `protobuf:"bytes,4,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName               string                     `protobuf:"bytes,5,opt,name=LastName" json:"LastName,omitempty"`
	Password               string                     `protobuf:"bytes,6,opt,name=Password" json:"Password,omitempty"`
	Status                 StatusType                 `protobuf:"varint,7,opt,name=Status,enum=authproto.StatusType" json:"Status,omitempty"`
	MobileNumber           string                     `protobuf:"bytes,9,opt,name=MobileNumber" json:"MobileNumber,omitempty"`
	MobileNumberVerifiedAt *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=MobileNumberVerifiedAt" json:"MobileNumberVerifiedAt,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Profile) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Profile) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Profile) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Profile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Profile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Profile) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Profile) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_Legacy
}

func (m *Profile) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *Profile) GetMobileNumberVerifiedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.MobileNumberVerifiedAt
	}
	return nil
}

type Location struct {
	LocationID string  `protobuf:"bytes,1,opt,name=LocationID" json:"LocationID,omitempty"`
	Roles      []int32 `protobuf:"varint,2,rep,packed,name=Roles" json:"Roles,omitempty"`
	Accepted   bool    `protobuf:"varint,3,opt,name=Accepted" json:"Accepted,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Location) GetLocationID() string {
	if m != nil {
		return m.LocationID
	}
	return ""
}

func (m *Location) GetRoles() []int32 {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Location) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

type Role struct {
	Value int32 `protobuf:"varint,1,opt,name=Value" json:"Value,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Role) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type UserSearch struct {
	LocationIDs []string `protobuf:"bytes,1,rep,name=LocationIDs" json:"LocationIDs,omitempty"`
	SearchTerms []string `protobuf:"bytes,2,rep,name=SearchTerms" json:"SearchTerms,omitempty"`
	Limit       int32    `protobuf:"varint,3,opt,name=Limit" json:"Limit,omitempty"`
	Skip        int32    `protobuf:"varint,4,opt,name=Skip" json:"Skip,omitempty"`
}

func (m *UserSearch) Reset()                    { *m = UserSearch{} }
func (m *UserSearch) String() string            { return proto.CompactTextString(m) }
func (*UserSearch) ProtoMessage()               {}
func (*UserSearch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UserSearch) GetLocationIDs() []string {
	if m != nil {
		return m.LocationIDs
	}
	return nil
}

func (m *UserSearch) GetSearchTerms() []string {
	if m != nil {
		return m.SearchTerms
	}
	return nil
}

func (m *UserSearch) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *UserSearch) GetSkip() int32 {
	if m != nil {
		return m.Skip
	}
	return 0
}

type UsersRequest struct {
	LocationID string `protobuf:"bytes,1,opt,name=LocationID" json:"LocationID,omitempty"`
}

func (m *UsersRequest) Reset()                    { *m = UsersRequest{} }
func (m *UsersRequest) String() string            { return proto.CompactTextString(m) }
func (*UsersRequest) ProtoMessage()               {}
func (*UsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UsersRequest) GetLocationID() string {
	if m != nil {
		return m.LocationID
	}
	return ""
}

type UsersResponse struct {
	Users []*User `protobuf:"bytes,1,rep,name=Users" json:"Users,omitempty"`
}

func (m *UsersResponse) Reset()                    { *m = UsersResponse{} }
func (m *UsersResponse) String() string            { return proto.CompactTextString(m) }
func (*UsersResponse) ProtoMessage()               {}
func (*UsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type LoginRequest struct {
	Username       string          `protobuf:"bytes,1,opt,name=Username" json:"Username,omitempty"`
	Password       string          `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	Expiration     int32           `protobuf:"varint,3,opt,name=Expiration" json:"Expiration,omitempty"`
	RefreshWindow  int32           `protobuf:"varint,4,opt,name=RefreshWindow" json:"RefreshWindow,omitempty"`
	ClientMetadata *ClientMetadata `protobuf:"bytes,5,opt,name=ClientMetadata" json:"ClientMetadata,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetExpiration() int32 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *LoginRequest) GetRefreshWindow() int32 {
	if m != nil {
		return m.RefreshWindow
	}
	return 0
}

func (m *LoginRequest) GetClientMetadata() *ClientMetadata {
	if m != nil {
		return m.ClientMetadata
	}
	return nil
}

type ClientMetadata struct {
	ClientType        string            `protobuf:"bytes,1,opt,name=ClientType" json:"ClientType,omitempty"`
	RequestingService []string          `protobuf:"bytes,2,rep,name=RequestingService" json:"RequestingService,omitempty"`
	RequestHeaders    map[string]string `protobuf:"bytes,3,rep,name=RequestHeaders" json:"RequestHeaders,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ClientMetadata) Reset()                    { *m = ClientMetadata{} }
func (m *ClientMetadata) String() string            { return proto.CompactTextString(m) }
func (*ClientMetadata) ProtoMessage()               {}
func (*ClientMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ClientMetadata) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

func (m *ClientMetadata) GetRequestingService() []string {
	if m != nil {
		return m.RequestingService
	}
	return nil
}

func (m *ClientMetadata) GetRequestHeaders() map[string]string {
	if m != nil {
		return m.RequestHeaders
	}
	return nil
}

type LoginResponse struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type PublicKeyResponse struct {
	PublicKey []byte `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
}

func (m *PublicKeyResponse) Reset()                    { *m = PublicKeyResponse{} }
func (m *PublicKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*PublicKeyResponse) ProtoMessage()               {}
func (*PublicKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *PublicKeyResponse) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type RefreshTokenRequest struct {
	Token      string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	Expiration string `protobuf:"bytes,2,opt,name=Expiration" json:"Expiration,omitempty"`
}

func (m *RefreshTokenRequest) Reset()                    { *m = RefreshTokenRequest{} }
func (m *RefreshTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*RefreshTokenRequest) ProtoMessage()               {}
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RefreshTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RefreshTokenRequest) GetExpiration() string {
	if m != nil {
		return m.Expiration
	}
	return ""
}

type EmptyRequest struct {
}

func (m *EmptyRequest) Reset()                    { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string            { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()               {}
func (*EmptyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type OauthLoginRequset struct {
	Username          string          `protobuf:"bytes,1,opt,name=Username" json:"Username,omitempty"`
	GoogleAccessToken string          `protobuf:"bytes,2,opt,name=GoogleAccessToken" json:"GoogleAccessToken,omitempty"`
	FirstName         string          `protobuf:"bytes,3,opt,name=FirstName" json:"FirstName,omitempty"`
	LastName          string          `protobuf:"bytes,4,opt,name=LastName" json:"LastName,omitempty"`
	ClientMetadata    *ClientMetadata `protobuf:"bytes,5,opt,name=ClientMetadata" json:"ClientMetadata,omitempty"`
}

func (m *OauthLoginRequset) Reset()                    { *m = OauthLoginRequset{} }
func (m *OauthLoginRequset) String() string            { return proto.CompactTextString(m) }
func (*OauthLoginRequset) ProtoMessage()               {}
func (*OauthLoginRequset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *OauthLoginRequset) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *OauthLoginRequset) GetGoogleAccessToken() string {
	if m != nil {
		return m.GoogleAccessToken
	}
	return ""
}

func (m *OauthLoginRequset) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *OauthLoginRequset) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *OauthLoginRequset) GetClientMetadata() *ClientMetadata {
	if m != nil {
		return m.ClientMetadata
	}
	return nil
}

type OauthLoginResponse struct {
	WeaveToken string `protobuf:"bytes,1,opt,name=WeaveToken" json:"WeaveToken,omitempty"`
}

func (m *OauthLoginResponse) Reset()                    { *m = OauthLoginResponse{} }
func (m *OauthLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*OauthLoginResponse) ProtoMessage()               {}
func (*OauthLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *OauthLoginResponse) GetWeaveToken() string {
	if m != nil {
		return m.WeaveToken
	}
	return ""
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "authproto.UserRequest")
	proto.RegisterType((*FindByUsernameRequest)(nil), "authproto.FindByUsernameRequest")
	proto.RegisterType((*LocationUserRequest)(nil), "authproto.LocationUserRequest")
	proto.RegisterType((*User)(nil), "authproto.User")
	proto.RegisterType((*Profile)(nil), "authproto.Profile")
	proto.RegisterType((*Location)(nil), "authproto.Location")
	proto.RegisterType((*Role)(nil), "authproto.Role")
	proto.RegisterType((*UserSearch)(nil), "authproto.UserSearch")
	proto.RegisterType((*UsersRequest)(nil), "authproto.UsersRequest")
	proto.RegisterType((*UsersResponse)(nil), "authproto.UsersResponse")
	proto.RegisterType((*LoginRequest)(nil), "authproto.LoginRequest")
	proto.RegisterType((*ClientMetadata)(nil), "authproto.ClientMetadata")
	proto.RegisterType((*LoginResponse)(nil), "authproto.LoginResponse")
	proto.RegisterType((*PublicKeyResponse)(nil), "authproto.PublicKeyResponse")
	proto.RegisterType((*RefreshTokenRequest)(nil), "authproto.RefreshTokenRequest")
	proto.RegisterType((*EmptyRequest)(nil), "authproto.EmptyRequest")
	proto.RegisterType((*OauthLoginRequset)(nil), "authproto.OauthLoginRequset")
	proto.RegisterType((*OauthLoginResponse)(nil), "authproto.OauthLoginResponse")
	proto.RegisterEnum("authproto.StatusType", StatusType_name, StatusType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Auth service

type AuthClient interface {
	LocationUsers(ctx context.Context, in *UsersRequest, opts ...grpc.CallOption) (*UsersResponse, error)
	LocationUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*User, error)
	DeleteLocationUser(ctx context.Context, in *LocationUserRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	CreateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Profile, error)
	UpsertUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	FindUsers(ctx context.Context, in *UserSearch, opts ...grpc.CallOption) (*UsersResponse, error)
	FindUser(ctx context.Context, in *wgrpcprotouuid.UUID, opts ...grpc.CallOption) (*User, error)
	FindByUsername(ctx context.Context, in *FindByUsernameRequest, opts ...grpc.CallOption) (*User, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	PublicKey(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*PublicKeyResponse, error)
	RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	InternalOauthLogin(ctx context.Context, in *OauthLoginRequset, opts ...grpc.CallOption) (*OauthLoginResponse, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) LocationUsers(ctx context.Context, in *UsersRequest, opts ...grpc.CallOption) (*UsersResponse, error) {
	out := new(UsersResponse)
	err := grpc.Invoke(ctx, "/authproto.Auth/LocationUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) LocationUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/authproto.Auth/LocationUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) DeleteLocationUser(ctx context.Context, in *LocationUserRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/authproto.Auth/DeleteLocationUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) UpdateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/authproto.Auth/UpdateProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) CreateProfile(ctx context.Context, in *Profile, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := grpc.Invoke(ctx, "/authproto.Auth/CreateProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) UpsertUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/authproto.Auth/UpsertUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) FindUsers(ctx context.Context, in *UserSearch, opts ...grpc.CallOption) (*UsersResponse, error) {
	out := new(UsersResponse)
	err := grpc.Invoke(ctx, "/authproto.Auth/FindUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) FindUser(ctx context.Context, in *wgrpcprotouuid.UUID, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/authproto.Auth/FindUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) FindByUsername(ctx context.Context, in *FindByUsernameRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/authproto.Auth/FindByUsername", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/authproto.Auth/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) PublicKey(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*PublicKeyResponse, error) {
	out := new(PublicKeyResponse)
	err := grpc.Invoke(ctx, "/authproto.Auth/PublicKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/authproto.Auth/RefreshToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) InternalOauthLogin(ctx context.Context, in *OauthLoginRequset, opts ...grpc.CallOption) (*OauthLoginResponse, error) {
	out := new(OauthLoginResponse)
	err := grpc.Invoke(ctx, "/authproto.Auth/InternalOauthLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	LocationUsers(context.Context, *UsersRequest) (*UsersResponse, error)
	LocationUser(context.Context, *UserRequest) (*User, error)
	DeleteLocationUser(context.Context, *LocationUserRequest) (*google_protobuf1.Empty, error)
	UpdateProfile(context.Context, *Profile) (*google_protobuf1.Empty, error)
	CreateProfile(context.Context, *Profile) (*Profile, error)
	UpsertUser(context.Context, *User) (*User, error)
	FindUsers(context.Context, *UserSearch) (*UsersResponse, error)
	FindUser(context.Context, *wgrpcprotouuid.UUID) (*User, error)
	FindByUsername(context.Context, *FindByUsernameRequest) (*User, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	PublicKey(context.Context, *EmptyRequest) (*PublicKeyResponse, error)
	RefreshToken(context.Context, *RefreshTokenRequest) (*LoginResponse, error)
	InternalOauthLogin(context.Context, *OauthLoginRequset) (*OauthLoginResponse, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_LocationUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).LocationUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/LocationUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).LocationUsers(ctx, req.(*UsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_LocationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).LocationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/LocationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).LocationUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_DeleteLocationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocationUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DeleteLocationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/DeleteLocationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DeleteLocationUser(ctx, req.(*LocationUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_UpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).UpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/UpdateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).UpdateProfile(ctx, req.(*Profile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_CreateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Profile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).CreateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/CreateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).CreateProfile(ctx, req.(*Profile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_UpsertUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).UpsertUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/UpsertUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).UpsertUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_FindUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSearch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).FindUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/FindUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).FindUsers(ctx, req.(*UserSearch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_FindUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wgrpcprotouuid.UUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).FindUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/FindUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).FindUser(ctx, req.(*wgrpcprotouuid.UUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_FindByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).FindByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/FindByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).FindByUsername(ctx, req.(*FindByUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_PublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).PublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/PublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).PublicKey(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RefreshToken(ctx, req.(*RefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_InternalOauthLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OauthLoginRequset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).InternalOauthLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.Auth/InternalOauthLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).InternalOauthLogin(ctx, req.(*OauthLoginRequset))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authproto.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LocationUsers",
			Handler:    _Auth_LocationUsers_Handler,
		},
		{
			MethodName: "LocationUser",
			Handler:    _Auth_LocationUser_Handler,
		},
		{
			MethodName: "DeleteLocationUser",
			Handler:    _Auth_DeleteLocationUser_Handler,
		},
		{
			MethodName: "UpdateProfile",
			Handler:    _Auth_UpdateProfile_Handler,
		},
		{
			MethodName: "CreateProfile",
			Handler:    _Auth_CreateProfile_Handler,
		},
		{
			MethodName: "UpsertUser",
			Handler:    _Auth_UpsertUser_Handler,
		},
		{
			MethodName: "FindUsers",
			Handler:    _Auth_FindUsers_Handler,
		},
		{
			MethodName: "FindUser",
			Handler:    _Auth_FindUser_Handler,
		},
		{
			MethodName: "FindByUsername",
			Handler:    _Auth_FindByUsername_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "PublicKey",
			Handler:    _Auth_PublicKey_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _Auth_RefreshToken_Handler,
		},
		{
			MethodName: "InternalOauthLogin",
			Handler:    _Auth_InternalOauthLogin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4b, 0x6f, 0xdb, 0x46,
	0x10, 0xd6, 0xdb, 0xd2, 0x48, 0x76, 0xed, 0xf5, 0xa3, 0xaa, 0xe0, 0xba, 0x02, 0x51, 0x03, 0x42,
	0x91, 0x50, 0x8d, 0x5c, 0x14, 0x4d, 0xd1, 0x07, 0xd4, 0xc8, 0x69, 0xdd, 0xc8, 0xae, 0x41, 0x5b,
	0xc9, 0xa5, 0x17, 0x4a, 0x1c, 0x4b, 0x0b, 0x53, 0x24, 0xcb, 0x5d, 0xd9, 0x51, 0x7e, 0x64, 0x7b,
	0xef, 0xb9, 0x3f, 0xa2, 0xa7, 0xa2, 0xd8, 0x5d, 0x52, 0x5a, 0xd2, 0xb2, 0x93, 0x43, 0x0e, 0xb9,
	0x10, 0x3b, 0xcf, 0xfd, 0x76, 0xe6, 0xdb, 0xe1, 0x02, 0xd8, 0x33, 0x3e, 0x31, 0x83, 0xd0, 0xe7,
	0x3e, 0xa9, 0x88, 0xb5, 0x5c, 0x36, 0x3e, 0x1b, 0xfb, 0xfe, 0xd8, 0xc5, 0xb6, 0x94, 0x86, 0xb3,
	0xab, 0x36, 0xa7, 0x53, 0x64, 0xdc, 0x9e, 0x06, 0xca, 0xb7, 0x71, 0x34, 0xa6, 0x7c, 0x32, 0x1b,
	0x9a, 0x23, 0x7f, 0xda, 0x1e, 0xfb, 0xae, 0xed, 0x8d, 0x97, 0xbe, 0x01, 0x9f, 0x07, 0xc8, 0xda,
	0x38, 0x0d, 0xf8, 0x5c, 0x7d, 0xa3, 0xa0, 0xfe, 0x2d, 0xda, 0x37, 0xe8, 0xda, 0x43, 0xf3, 0xf5,
	0xfc, 0x4d, 0x7b, 0xea, 0x7b, 0x7e, 0x68, 0x53, 0xb7, 0xcd, 0x26, 0x76, 0x88, 0x4e, 0xfb, 0xd6,
	0xa5, 0xc3, 0xf6, 0xed, 0x38, 0x0c, 0x46, 0xea, 0x2b, 0x63, 0xb4, 0xe5, 0x6c, 0x46, 0x9d, 0xb6,
	0xf8, 0xa8, 0x6c, 0xc6, 0x21, 0x54, 0x07, 0x0c, 0x43, 0x0b, 0xff, 0x98, 0x21, 0xe3, 0x64, 0x0f,
	0x4a, 0x42, 0x3c, 0xe9, 0xd5, 0x73, 0xcd, 0x6c, 0xab, 0x62, 0x45, 0x92, 0x71, 0x04, 0xbb, 0xcf,
	0xa9, 0xe7, 0xfc, 0x34, 0x17, 0xb2, 0x67, 0x4f, 0x31, 0x0e, 0x68, 0x40, 0x39, 0x56, 0xd5, 0xb3,
	0x32, 0x64, 0x21, 0x1b, 0xa7, 0xb0, 0xdd, 0xf7, 0x47, 0x36, 0xa7, 0xbe, 0xa7, 0xef, 0x71, 0x00,
	0x10, 0xab, 0x4f, 0x7a, 0x51, 0x90, 0xa6, 0xb9, 0x17, 0xc3, 0x7f, 0x39, 0x28, 0x88, 0xa5, 0xe6,
	0x90, 0xd5, 0x1d, 0x12, 0x58, 0x72, 0x49, 0x2c, 0x84, 0x40, 0xe1, 0x72, 0x1e, 0x60, 0x3d, 0x2f,
	0xf5, 0x72, 0x4d, 0xf6, 0xa1, 0xf2, 0x9c, 0x86, 0x8c, 0x9f, 0x89, 0x80, 0x82, 0x34, 0x2c, 0x15,
	0x22, 0x5b, 0xdf, 0x8e, 0x8c, 0x45, 0x95, 0x2d, 0x96, 0xc9, 0x13, 0xa8, 0xc4, 0x80, 0x59, 0xbd,
	0xd4, 0xcc, 0xb7, 0xaa, 0x9d, 0x6d, 0x73, 0xd1, 0x78, 0x33, 0xb6, 0x59, 0x4b, 0x2f, 0x91, 0xee,
	0xdc, 0x66, 0xec, 0xd6, 0x0f, 0x9d, 0xfa, 0x9a, 0x4a, 0x17, 0xcb, 0xe4, 0x31, 0x94, 0x2e, 0xb8,
	0xcd, 0x67, 0xac, 0x5e, 0x6e, 0x66, 0x5b, 0x1b, 0x9d, 0x5d, 0x2d, 0x97, 0x32, 0x08, 0xbc, 0x56,
	0xe4, 0x44, 0x0c, 0xa8, 0x9d, 0xfa, 0x43, 0xea, 0xe2, 0xd9, 0x6c, 0x3a, 0xc4, 0xb0, 0x5e, 0x91,
	0xe9, 0x12, 0x3a, 0x62, 0xc1, 0x9e, 0x2e, 0xbf, 0xc4, 0x90, 0x5e, 0x51, 0x74, 0xba, 0xbc, 0x0e,
	0xcd, 0x6c, 0xab, 0xda, 0x69, 0x98, 0x8a, 0x9c, 0x66, 0x4c, 0x38, 0xf3, 0x32, 0x26, 0xa7, 0x75,
	0x4f, 0xa4, 0xf1, 0x67, 0x0e, 0xd6, 0xce, 0x43, 0xff, 0x8a, 0xba, 0xf8, 0x01, 0xf4, 0x40, 0x2f,
	0x68, 0xe9, 0xde, 0x82, 0xae, 0x7d, 0xc8, 0x05, 0xfd, 0x1d, 0xca, 0x31, 0x41, 0xde, 0x7a, 0x2b,
	0x76, 0xa0, 0x68, 0xf9, 0x2e, 0xb2, 0x7a, 0xae, 0x99, 0x6f, 0x15, 0x2d, 0x25, 0x88, 0x22, 0x74,
	0x47, 0x23, 0x0c, 0x38, 0x3a, 0xb2, 0xac, 0x65, 0x6b, 0x21, 0x1b, 0xfb, 0x50, 0x10, 0x4e, 0x22,
	0xf2, 0xa5, 0xed, 0xce, 0xd4, 0xfd, 0x2c, 0x5a, 0x4a, 0x30, 0xde, 0x00, 0x88, 0xc6, 0x5c, 0xa0,
	0x1d, 0x8e, 0x26, 0xa4, 0x09, 0xd5, 0xe5, 0x5e, 0xac, 0x9e, 0x6d, 0xe6, 0x5b, 0x15, 0x4b, 0x57,
	0x09, 0x0f, 0xe5, 0x7b, 0x89, 0xe1, 0x54, 0xa1, 0xa8, 0x58, 0xba, 0x4a, 0xec, 0xd3, 0xa7, 0x53,
	0xca, 0x25, 0x90, 0xa2, 0xa5, 0x04, 0xd1, 0xf4, 0x8b, 0x6b, 0x1a, 0xc8, 0xde, 0x16, 0x2d, 0xb9,
	0x36, 0x4c, 0xa8, 0x89, 0xbd, 0xd9, 0x3b, 0x4e, 0x04, 0xe3, 0x6b, 0x58, 0x8f, 0xfc, 0x59, 0xe0,
	0x7b, 0x0c, 0xc9, 0x21, 0x14, 0xa5, 0x42, 0x02, 0xad, 0x76, 0x3e, 0xd2, 0xda, 0x2b, 0x27, 0x8d,
	0xb2, 0x1a, 0x7f, 0x65, 0xa1, 0xd6, 0xf7, 0xc7, 0xd4, 0x7b, 0x87, 0x69, 0x95, 0xe0, 0x53, 0x2e,
	0xc5, 0xa7, 0x03, 0x80, 0xe3, 0xd7, 0x01, 0x0d, 0x25, 0xa0, 0xe8, 0x7c, 0x9a, 0x86, 0x7c, 0x0e,
	0xeb, 0x16, 0x5e, 0x85, 0xc8, 0x26, 0xaf, 0xa8, 0xe7, 0xf8, 0xb7, 0xd1, 0x69, 0x93, 0x4a, 0xd2,
	0x85, 0x8d, 0x67, 0x2e, 0x45, 0x8f, 0x9f, 0x22, 0xb7, 0x1d, 0x9b, 0xdb, 0x92, 0xd3, 0xd5, 0xce,
	0x27, 0x1a, 0xfc, 0xa4, 0x83, 0x95, 0x0a, 0x30, 0xfe, 0xcd, 0xa6, 0x73, 0x08, 0x6c, 0x4a, 0x23,
	0xef, 0x56, 0x54, 0xbc, 0xa5, 0x86, 0x3c, 0x82, 0xad, 0xe8, 0xf8, 0xd4, 0x1b, 0x5f, 0x60, 0x78,
	0x43, 0x47, 0x18, 0xb5, 0xef, 0xae, 0x81, 0x0c, 0x60, 0x23, 0x52, 0xfe, 0x82, 0xb6, 0x23, 0x4a,
	0x9c, 0x97, 0x25, 0x7e, 0x7c, 0x2f, 0x46, 0x33, 0xe9, 0x7f, 0xec, 0xf1, 0x70, 0x6e, 0xa5, 0x92,
	0x34, 0xba, 0xb0, 0xbd, 0xc2, 0x8d, 0x6c, 0x42, 0xfe, 0x1a, 0xe7, 0x11, 0x68, 0xb1, 0x14, 0x24,
	0xba, 0x91, 0x64, 0x55, 0x2d, 0x50, 0xc2, 0xb7, 0xb9, 0x6f, 0xb2, 0xc6, 0x21, 0xac, 0x47, 0xbd,
	0x8c, 0x48, 0xb0, 0x03, 0xc5, 0x4b, 0xff, 0x1a, 0xbd, 0x28, 0x5c, 0x09, 0xc6, 0x13, 0xd8, 0x3a,
	0x9f, 0x0d, 0x5d, 0x3a, 0x7a, 0x81, 0xf3, 0x85, 0xeb, 0x3e, 0x54, 0x16, 0x4a, 0xe9, 0x5e, 0xb3,
	0x96, 0x0a, 0xe3, 0x85, 0x00, 0x27, 0x1b, 0x25, 0x53, 0xc4, 0x64, 0x59, 0x99, 0x3f, 0x45, 0x05,
	0x85, 0x52, 0xd3, 0x18, 0x1b, 0x50, 0x3b, 0x16, 0x7f, 0xeb, 0x28, 0x8b, 0xf1, 0x77, 0x16, 0xb6,
	0x7e, 0x13, 0xb5, 0x5b, 0x10, 0x91, 0xe1, 0xc3, 0x44, 0x7c, 0x04, 0x5b, 0x3f, 0xcb, 0x51, 0x22,
	0x6e, 0x32, 0x63, 0x0a, 0x83, 0xda, 0xe8, 0xae, 0x21, 0x39, 0x40, 0xf3, 0x0f, 0x0d, 0xd0, 0x42,
	0x6a, 0x80, 0xbe, 0x07, 0x3a, 0x7e, 0x05, 0x44, 0x3f, 0x5b, 0x54, 0xed, 0x03, 0x80, 0x57, 0xe2,
	0x8d, 0xa2, 0x57, 0x4f, 0xd3, 0x7c, 0xf1, 0x23, 0xc0, 0x72, 0x08, 0x13, 0x80, 0x52, 0x1f, 0xc7,
	0xf6, 0x68, 0xbe, 0x99, 0x21, 0x55, 0x58, 0x3b, 0xf1, 0x6e, 0x28, 0x47, 0x67, 0x33, 0x2b, 0x0c,
	0xdd, 0x11, 0xa7, 0x37, 0xb8, 0x99, 0x23, 0x35, 0x28, 0xf7, 0x28, 0xb3, 0x87, 0x2e, 0x3a, 0x9b,
	0xf9, 0xce, 0x3f, 0x25, 0x28, 0x74, 0x67, 0x7c, 0x42, 0x7a, 0x82, 0x13, 0xcb, 0x17, 0x06, 0x23,
	0x1f, 0xa7, 0x26, 0x41, 0x3c, 0x62, 0x1a, 0xf5, 0xbb, 0x06, 0x85, 0xd6, 0xc8, 0x90, 0xa7, 0x62,
	0x4a, 0x2c, 0xb3, 0x90, 0xbd, 0xf4, 0x38, 0x89, 0x72, 0xa4, 0xc7, 0x8c, 0x91, 0x21, 0x67, 0x40,
	0x7a, 0xe8, 0x22, 0xc7, 0x44, 0x82, 0x83, 0x15, 0x6f, 0x01, 0x3d, 0xd1, 0xde, 0x9d, 0x7f, 0x85,
	0xa4, 0x8c, 0x91, 0x21, 0xdf, 0xc3, 0xfa, 0x20, 0x70, 0x6c, 0x8e, 0xf1, 0x7f, 0x96, 0x68, 0xa9,
	0x22, 0xdd, 0x03, 0xe1, 0x4f, 0x61, 0xfd, 0x59, 0x88, 0x6f, 0x09, 0x5f, 0xa1, 0x33, 0x32, 0xe4,
	0x4b, 0x80, 0x41, 0xc0, 0x30, 0xe4, 0xf2, 0x04, 0xe9, 0xa3, 0xae, 0x3a, 0xfb, 0x0f, 0x82, 0x79,
	0x9e, 0xa3, 0x0a, 0xbf, 0x9b, 0xb2, 0xab, 0x1f, 0xc3, 0x83, 0x65, 0x3f, 0x82, 0x72, 0x1c, 0x4f,
	0x76, 0xcc, 0xe4, 0x13, 0xd5, 0x1c, 0x0c, 0x4e, 0x7a, 0xab, 0x36, 0x3d, 0x86, 0x8d, 0xe4, 0x43,
	0x94, 0x34, 0x35, 0xa7, 0x95, 0x6f, 0xd4, 0x55, 0x69, 0xbe, 0x83, 0xa2, 0xe4, 0x6c, 0x82, 0x30,
	0xfa, 0xaf, 0x22, 0x81, 0x3c, 0x41, 0x6f, 0x23, 0x43, 0x7a, 0xda, 0x38, 0x49, 0x64, 0xd0, 0x6f,
	0x7e, 0x63, 0x5f, 0xaf, 0x73, 0x7a, 0x24, 0x19, 0x19, 0xf2, 0x2b, 0xd4, 0xf4, 0xb1, 0x93, 0x60,
	0xcd, 0x8a, 0x79, 0xf4, 0x20, 0xa2, 0x0b, 0x20, 0x27, 0x1e, 0x17, 0xc7, 0x76, 0x97, 0x17, 0x92,
	0xe8, 0x08, 0xee, 0xcc, 0xa0, 0xc6, 0xa7, 0xf7, 0x58, 0xe3, 0xa4, 0xc3, 0x92, 0xb4, 0x1d, 0xfd,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xcd, 0xfe, 0x58, 0xdf, 0x0c, 0x00, 0x00,
}
