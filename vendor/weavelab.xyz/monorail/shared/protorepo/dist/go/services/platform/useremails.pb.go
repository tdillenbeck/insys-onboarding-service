// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protorepo/services/platform/useremails.proto

package platform

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
	platformproto "weavelab.xyz/monorail/shared/protorepo/dist/go/messages/platformproto"
	sharedproto "weavelab.xyz/monorail/shared/protorepo/dist/go/messages/sharedproto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("protorepo/services/platform/useremails.proto", fileDescriptor_2895f13a58da84da)
}

var fileDescriptor_2895f13a58da84da = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xb1, 0x4b, 0x03, 0x31,
	0x14, 0x87, 0xeb, 0x22, 0x18, 0x9c, 0x0e, 0x71, 0xa8, 0x88, 0x50, 0x1c, 0xe5, 0x05, 0x74, 0x75,
	0x90, 0x62, 0x07, 0x07, 0x51, 0x7a, 0xdc, 0xe2, 0x96, 0x33, 0xaf, 0x67, 0x20, 0xe9, 0x3b, 0xdf,
	0x4b, 0x5a, 0xeb, 0xbf, 0xe2, 0x3f, 0x2b, 0x97, 0xf3, 0xd4, 0xe1, 0xe8, 0xf8, 0xf8, 0x7d, 0xf9,
	0xe0, 0x8b, 0xba, 0x6a, 0x99, 0x22, 0x31, 0xb6, 0xa4, 0x05, 0x79, 0xe3, 0x5e, 0x51, 0x74, 0xeb,
	0x4d, 0x5c, 0x11, 0x07, 0x9d, 0x04, 0x19, 0x83, 0x71, 0x5e, 0x20, 0x63, 0xd3, 0xb3, 0x86, 0xa8,
	0xf1, 0xa8, 0xf3, 0x55, 0xa7, 0x95, 0xc6, 0xd0, 0xc6, 0xdd, 0xcf, 0xf8, 0x4f, 0x15, 0x50, 0xc4,
	0x34, 0x7b, 0x55, 0x97, 0x23, 0xb4, 0xbc, 0x19, 0x46, 0xab, 0x53, 0x72, 0xb6, 0xa7, 0xae, 0xbf,
	0x0e, 0x94, 0xaa, 0x04, 0x79, 0x91, 0x9f, 0x16, 0xb7, 0xea, 0xa8, 0xc4, 0xb5, 0xcd, 0x57, 0x71,
	0x01, 0x83, 0x3d, 0xb3, 0xf0, 0xbb, 0x2c, 0xf1, 0x3d, 0xa1, 0xc4, 0xe9, 0x31, 0xf4, 0x42, 0xa8,
	0xaa, 0x87, 0xfb, 0xd9, 0xa4, 0x78, 0x52, 0x27, 0x1d, 0x53, 0x3e, 0x96, 0x4b, 0x14, 0x8c, 0xcf,
	0x46, 0x64, 0x4b, 0x6c, 0x8b, 0xf3, 0x11, 0x51, 0x86, 0x7a, 0xcd, 0x29, 0xf4, 0xd5, 0x30, 0x54,
	0xc3, 0xa2, 0xab, 0x9e, 0x4d, 0xe6, 0xf3, 0x97, 0xbb, 0x2d, 0x9a, 0x0d, 0x7a, 0x53, 0xc3, 0xc7,
	0xee, 0x53, 0x07, 0x5a, 0x13, 0x1b, 0xe7, 0x87, 0x90, 0xbf, 0x44, 0xeb, 0x24, 0xea, 0x66, 0xe4,
	0x8f, 0xeb, 0xc3, 0x0c, 0xdd, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x21, 0xb1, 0xad, 0x89,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserEmailsClient is the client API for UserEmails service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserEmailsClient interface {
	SendEmail(ctx context.Context, in *platformproto.SendEmailRequest, opts ...grpc.CallOption) (*sharedproto.UUID, error)
	SendSMSResetPassword(ctx context.Context, in *platformproto.SendSMSRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userEmailsClient struct {
	cc *grpc.ClientConn
}

func NewUserEmailsClient(cc *grpc.ClientConn) UserEmailsClient {
	return &userEmailsClient{cc}
}

func (c *userEmailsClient) SendEmail(ctx context.Context, in *platformproto.SendEmailRequest, opts ...grpc.CallOption) (*sharedproto.UUID, error) {
	out := new(sharedproto.UUID)
	err := c.cc.Invoke(ctx, "/UserEmails/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userEmailsClient) SendSMSResetPassword(ctx context.Context, in *platformproto.SendSMSRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/UserEmails/SendSMSResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserEmailsServer is the server API for UserEmails service.
type UserEmailsServer interface {
	SendEmail(context.Context, *platformproto.SendEmailRequest) (*sharedproto.UUID, error)
	SendSMSResetPassword(context.Context, *platformproto.SendSMSRequest) (*empty.Empty, error)
}

func RegisterUserEmailsServer(s *grpc.Server, srv UserEmailsServer) {
	s.RegisterService(&_UserEmails_serviceDesc, srv)
}

func _UserEmails_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(platformproto.SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserEmailsServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserEmails/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserEmailsServer).SendEmail(ctx, req.(*platformproto.SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserEmails_SendSMSResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(platformproto.SendSMSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserEmailsServer).SendSMSResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserEmails/SendSMSResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserEmailsServer).SendSMSResetPassword(ctx, req.(*platformproto.SendSMSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserEmails_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserEmails",
	HandlerType: (*UserEmailsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEmail",
			Handler:    _UserEmails_SendEmail_Handler,
		},
		{
			MethodName: "SendSMSResetPassword",
			Handler:    _UserEmails_SendSMSResetPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protorepo/services/platform/useremails.proto",
}
