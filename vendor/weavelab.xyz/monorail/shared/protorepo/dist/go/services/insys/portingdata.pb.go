// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protorepo/services/insys/portingdata.proto

package insys

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
	insysproto "weavelab.xyz/monorail/shared/protorepo/dist/go/messages/insysproto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("protorepo/services/insys/portingdata.proto", fileDescriptor_837113dababed2fd)
}

var fileDescriptor_837113dababed2fd = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x4f, 0x4b, 0xeb, 0x40,
	0x14, 0xc5, 0xfb, 0x36, 0xe5, 0x31, 0xaf, 0x0f, 0x1e, 0xb3, 0x78, 0x8b, 0xb8, 0x10, 0x0a, 0x76,
	0x51, 0x31, 0xe3, 0x9f, 0x8d, 0x2e, 0x44, 0x88, 0x71, 0x51, 0x70, 0x21, 0x16, 0x41, 0xdc, 0xc8,
	0x6d, 0x72, 0x9b, 0x06, 0xd2, 0x4c, 0x9c, 0x99, 0x54, 0xe3, 0x27, 0x11, 0xfc, 0xb2, 0xd2, 0x4c,
	0x67, 0x4c, 0x4b, 0xd3, 0xb4, 0x2e, 0x73, 0xe7, 0x77, 0xee, 0x39, 0x13, 0x0e, 0x43, 0xfa, 0x99,
	0xe0, 0x8a, 0x0b, 0xcc, 0x38, 0x93, 0x28, 0x66, 0x71, 0x80, 0x92, 0xc5, 0xa9, 0x2c, 0x24, 0xcb,
	0xb8, 0x50, 0x71, 0x1a, 0x85, 0xa0, 0xc0, 0x2d, 0x21, 0xfa, 0xaf, 0x32, 0x2a, 0x27, 0xce, 0x5e,
	0xc4, 0x79, 0x94, 0x20, 0x2b, 0xbf, 0x46, 0xf9, 0x98, 0xe1, 0x34, 0x53, 0x85, 0xc6, 0x9d, 0xca,
	0xea, 0x29, 0x4a, 0x09, 0x51, 0xfd, 0xea, 0xd3, 0xcf, 0xdf, 0x84, 0xde, 0xe9, 0xa9, 0x0f, 0x0a,
	0x86, 0x3a, 0x0a, 0x0d, 0x48, 0xfb, 0x5a, 0x20, 0x28, 0xa4, 0x7d, 0x77, 0xd5, 0xdc, 0xad, 0xf0,
	0x1a, 0xba, 0xc7, 0x97, 0x1c, 0xa5, 0x72, 0x0e, 0xb7, 0x62, 0x65, 0xc6, 0x53, 0x89, 0xdd, 0x16,
	0x15, 0xe4, 0x8f, 0x07, 0x2a, 0x98, 0x2c, 0x9c, 0xd8, 0x46, 0x75, 0x85, 0x34, 0x76, 0xc7, 0xdb,
	0x0b, 0xac, 0x67, 0x40, 0xda, 0x0f, 0x59, 0xd8, 0x7c, 0x31, 0x0d, 0x6d, 0x77, 0x31, 0xc3, 0x5a,
	0x93, 0x9c, 0x74, 0xbc, 0xe2, 0x96, 0x07, 0xa0, 0x62, 0x9e, 0x0e, 0x7c, 0xda, 0x10, 0xb4, 0x82,
	0x1a, 0xc3, 0x93, 0x1d, 0x14, 0xd6, 0xf6, 0x91, 0xfc, 0xf5, 0x31, 0x41, 0x1b, 0x9b, 0x1e, 0xd5,
	0x6e, 0x59, 0x10, 0x4b, 0xb8, 0xf3, 0xdf, 0xd5, 0xad, 0x72, 0x4d, 0xab, 0xdc, 0x9b, 0x79, 0xab,
	0xba, 0x2d, 0xfa, 0x4c, 0x3a, 0x73, 0xe1, 0x20, 0x1d, 0x2a, 0x50, 0xb9, 0xa4, 0x07, 0xeb, 0x17,
	0x9b, 0x73, 0xb3, 0xb0, 0xd7, 0x84, 0xd9, 0xe8, 0xd6, 0x60, 0xd1, 0x85, 0x5a, 0x83, 0xe5, 0x06,
	0xf4, 0x9a, 0x30, 0x6b, 0xf0, 0xf1, 0x8b, 0xec, 0x57, 0x8f, 0xbc, 0x62, 0x08, 0x09, 0xca, 0x31,
	0x17, 0x01, 0x96, 0x4d, 0x19, 0xf8, 0xf4, 0x7c, 0xf3, 0xb6, 0x35, 0x12, 0x93, 0xe3, 0xe2, 0x07,
	0xca, 0x35, 0xd1, 0xf4, 0x6f, 0xd9, 0x29, 0x5a, 0xad, 0xa4, 0x31, 0xda, 0x06, 0xa5, 0x89, 0xe6,
	0x5d, 0x3d, 0x5d, 0xbe, 0x22, 0xcc, 0x30, 0x81, 0x91, 0xfb, 0x56, 0xbc, 0xb3, 0x29, 0x4f, 0xb9,
	0x80, 0x38, 0x61, 0x72, 0x02, 0x02, 0x43, 0xf6, 0xfd, 0xd0, 0x84, 0xb1, 0x54, 0x2c, 0x5a, 0x7d,
	0xcb, 0x46, 0xed, 0x92, 0x38, 0xfb, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x41, 0xb0, 0x06, 0x27, 0xee,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PortingDataServiceClient is the client API for PortingDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortingDataServiceClient interface {
	Create(ctx context.Context, in *insysproto.PortingDataCreateRequest, opts ...grpc.CallOption) (*insysproto.PortingDataCreateResponse, error)
	BatchCreate(ctx context.Context, in *insysproto.PortingDataBatchCreateRequest, opts ...grpc.CallOption) (*insysproto.PortingDataBatchCreateResponse, error)
	Update(ctx context.Context, in *insysproto.PortingDataUpdateRequest, opts ...grpc.CallOption) (*insysproto.PortingDataUpdateResponse, error)
	ByLocationID(ctx context.Context, in *insysproto.PortingDataByLocationIDRequest, opts ...grpc.CallOption) (*insysproto.PortingDataByLocationIDResponse, error)
	DeleteRequest(ctx context.Context, in *insysproto.PortingRequestDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	PortInStatus(ctx context.Context, in *insysproto.PortInStatusRequest, opts ...grpc.CallOption) (*insysproto.PortInStatusResponse, error)
	PortInCreate(ctx context.Context, in *insysproto.PortInCreateRequest, opts ...grpc.CallOption) (*insysproto.PortInCreateResponse, error)
	PortInCreateBySalesforceBatchID(ctx context.Context, in *insysproto.PortInCreateBySalesforceBatchIDRequest, opts ...grpc.CallOption) (*insysproto.PortInCreateBySalesforceBatchIDResponse, error)
	PortInStatusBySalesforceBatchID(ctx context.Context, in *insysproto.PortInStatusBySalesforceBatchIDRequest, opts ...grpc.CallOption) (*insysproto.PortInStatusBySalesforceBatchIDResponse, error)
}

type portingDataServiceClient struct {
	cc *grpc.ClientConn
}

func NewPortingDataServiceClient(cc *grpc.ClientConn) PortingDataServiceClient {
	return &portingDataServiceClient{cc}
}

func (c *portingDataServiceClient) Create(ctx context.Context, in *insysproto.PortingDataCreateRequest, opts ...grpc.CallOption) (*insysproto.PortingDataCreateResponse, error) {
	out := new(insysproto.PortingDataCreateResponse)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portingDataServiceClient) BatchCreate(ctx context.Context, in *insysproto.PortingDataBatchCreateRequest, opts ...grpc.CallOption) (*insysproto.PortingDataBatchCreateResponse, error) {
	out := new(insysproto.PortingDataBatchCreateResponse)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/BatchCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portingDataServiceClient) Update(ctx context.Context, in *insysproto.PortingDataUpdateRequest, opts ...grpc.CallOption) (*insysproto.PortingDataUpdateResponse, error) {
	out := new(insysproto.PortingDataUpdateResponse)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portingDataServiceClient) ByLocationID(ctx context.Context, in *insysproto.PortingDataByLocationIDRequest, opts ...grpc.CallOption) (*insysproto.PortingDataByLocationIDResponse, error) {
	out := new(insysproto.PortingDataByLocationIDResponse)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/ByLocationID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portingDataServiceClient) DeleteRequest(ctx context.Context, in *insysproto.PortingRequestDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/DeleteRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portingDataServiceClient) PortInStatus(ctx context.Context, in *insysproto.PortInStatusRequest, opts ...grpc.CallOption) (*insysproto.PortInStatusResponse, error) {
	out := new(insysproto.PortInStatusResponse)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/PortInStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portingDataServiceClient) PortInCreate(ctx context.Context, in *insysproto.PortInCreateRequest, opts ...grpc.CallOption) (*insysproto.PortInCreateResponse, error) {
	out := new(insysproto.PortInCreateResponse)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/PortInCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portingDataServiceClient) PortInCreateBySalesforceBatchID(ctx context.Context, in *insysproto.PortInCreateBySalesforceBatchIDRequest, opts ...grpc.CallOption) (*insysproto.PortInCreateBySalesforceBatchIDResponse, error) {
	out := new(insysproto.PortInCreateBySalesforceBatchIDResponse)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/PortInCreateBySalesforceBatchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portingDataServiceClient) PortInStatusBySalesforceBatchID(ctx context.Context, in *insysproto.PortInStatusBySalesforceBatchIDRequest, opts ...grpc.CallOption) (*insysproto.PortInStatusBySalesforceBatchIDResponse, error) {
	out := new(insysproto.PortInStatusBySalesforceBatchIDResponse)
	err := c.cc.Invoke(ctx, "/portingdataproto.PortingDataService/PortInStatusBySalesforceBatchID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortingDataServiceServer is the server API for PortingDataService service.
type PortingDataServiceServer interface {
	Create(context.Context, *insysproto.PortingDataCreateRequest) (*insysproto.PortingDataCreateResponse, error)
	BatchCreate(context.Context, *insysproto.PortingDataBatchCreateRequest) (*insysproto.PortingDataBatchCreateResponse, error)
	Update(context.Context, *insysproto.PortingDataUpdateRequest) (*insysproto.PortingDataUpdateResponse, error)
	ByLocationID(context.Context, *insysproto.PortingDataByLocationIDRequest) (*insysproto.PortingDataByLocationIDResponse, error)
	DeleteRequest(context.Context, *insysproto.PortingRequestDeleteRequest) (*empty.Empty, error)
	PortInStatus(context.Context, *insysproto.PortInStatusRequest) (*insysproto.PortInStatusResponse, error)
	PortInCreate(context.Context, *insysproto.PortInCreateRequest) (*insysproto.PortInCreateResponse, error)
	PortInCreateBySalesforceBatchID(context.Context, *insysproto.PortInCreateBySalesforceBatchIDRequest) (*insysproto.PortInCreateBySalesforceBatchIDResponse, error)
	PortInStatusBySalesforceBatchID(context.Context, *insysproto.PortInStatusBySalesforceBatchIDRequest) (*insysproto.PortInStatusBySalesforceBatchIDResponse, error)
}

func RegisterPortingDataServiceServer(s *grpc.Server, srv PortingDataServiceServer) {
	s.RegisterService(&_PortingDataService_serviceDesc, srv)
}

func _PortingDataService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortingDataCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).Create(ctx, req.(*insysproto.PortingDataCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortingDataService_BatchCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortingDataBatchCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).BatchCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/BatchCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).BatchCreate(ctx, req.(*insysproto.PortingDataBatchCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortingDataService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortingDataUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).Update(ctx, req.(*insysproto.PortingDataUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortingDataService_ByLocationID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortingDataByLocationIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).ByLocationID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/ByLocationID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).ByLocationID(ctx, req.(*insysproto.PortingDataByLocationIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortingDataService_DeleteRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortingRequestDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).DeleteRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/DeleteRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).DeleteRequest(ctx, req.(*insysproto.PortingRequestDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortingDataService_PortInStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortInStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).PortInStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/PortInStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).PortInStatus(ctx, req.(*insysproto.PortInStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortingDataService_PortInCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortInCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).PortInCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/PortInCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).PortInCreate(ctx, req.(*insysproto.PortInCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortingDataService_PortInCreateBySalesforceBatchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortInCreateBySalesforceBatchIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).PortInCreateBySalesforceBatchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/PortInCreateBySalesforceBatchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).PortInCreateBySalesforceBatchID(ctx, req.(*insysproto.PortInCreateBySalesforceBatchIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortingDataService_PortInStatusBySalesforceBatchID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.PortInStatusBySalesforceBatchIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortingDataServiceServer).PortInStatusBySalesforceBatchID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portingdataproto.PortingDataService/PortInStatusBySalesforceBatchID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortingDataServiceServer).PortInStatusBySalesforceBatchID(ctx, req.(*insysproto.PortInStatusBySalesforceBatchIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortingDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "portingdataproto.PortingDataService",
	HandlerType: (*PortingDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _PortingDataService_Create_Handler,
		},
		{
			MethodName: "BatchCreate",
			Handler:    _PortingDataService_BatchCreate_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PortingDataService_Update_Handler,
		},
		{
			MethodName: "ByLocationID",
			Handler:    _PortingDataService_ByLocationID_Handler,
		},
		{
			MethodName: "DeleteRequest",
			Handler:    _PortingDataService_DeleteRequest_Handler,
		},
		{
			MethodName: "PortInStatus",
			Handler:    _PortingDataService_PortInStatus_Handler,
		},
		{
			MethodName: "PortInCreate",
			Handler:    _PortingDataService_PortInCreate_Handler,
		},
		{
			MethodName: "PortInCreateBySalesforceBatchID",
			Handler:    _PortingDataService_PortInCreateBySalesforceBatchID_Handler,
		},
		{
			MethodName: "PortInStatusBySalesforceBatchID",
			Handler:    _PortingDataService_PortInStatusBySalesforceBatchID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protorepo/services/insys/portingdata.proto",
}
