// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protorepo/services/insys/package.proto

package insys

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
	insysproto "weavelab.xyz/monorail/shared/protorepo/dist/go/messages/insysproto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("protorepo/services/insys/package.proto", fileDescriptor_c08258cd9015e5e6)
}

var fileDescriptor_c08258cd9015e5e6 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xb1, 0x4a, 0xc5, 0x40,
	0x10, 0x45, 0x4d, 0x63, 0x11, 0xc4, 0x22, 0x65, 0x3a, 0x2d, 0x2c, 0x77, 0x41, 0x41, 0x2b, 0x11,
	0x2c, 0x52, 0x07, 0xd3, 0xd9, 0x4d, 0x36, 0xd7, 0xb8, 0x98, 0x64, 0xd6, 0x99, 0x4d, 0x34, 0x7e,
	0x88, 0xff, 0xe0, 0x5f, 0x0a, 0x89, 0x60, 0x78, 0x3c, 0x78, 0xbc, 0xf2, 0x0e, 0xe7, 0xcc, 0x30,
	0x37, 0xbd, 0x0a, 0xc2, 0x91, 0x05, 0x81, 0xad, 0x42, 0x26, 0xef, 0xa0, 0xd6, 0x0f, 0x3a, 0xab,
	0x0d, 0xe4, 0xde, 0xa8, 0x85, 0x59, 0x80, 0xec, 0xec, 0x2f, 0x2e, 0x29, 0xdf, 0x58, 0x3d, 0x54,
	0xa9, 0xdd, 0x6f, 0x5d, 0xff, 0x24, 0xe9, 0x79, 0xb9, 0x4e, 0xaa, 0x75, 0x7b, 0xf6, 0x9d, 0xa4,
	0x17, 0x15, 0x62, 0x01, 0x8a, 0xa3, 0x40, 0x0b, 0xe1, 0xbe, 0xa2, 0x0e, 0xfa, 0xc2, 0xe2, 0x50,
	0x0a, 0x37, 0xa3, 0x8b, 0x9a, 0xdd, 0x9a, 0xed, 0x3d, 0x73, 0x50, 0x78, 0xc2, 0xfb, 0x08, 0x8d,
	0xf9, 0xdd, 0xd1, 0x9e, 0x06, 0x1e, 0x14, 0x97, 0x27, 0x8f, 0x0f, 0xcf, 0xf7, 0x1f, 0xa0, 0x09,
	0x1d, 0xd5, 0xe6, 0x73, 0xfe, 0xb2, 0x3d, 0x0f, 0x2c, 0xe4, 0x3b, 0xab, 0xaf, 0x24, 0x68, 0xec,
	0xff, 0xcb, 0x8d, 0xd7, 0x68, 0xdb, 0xdd, 0xc2, 0xea, 0xd3, 0x85, 0xb8, 0xf9, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0xb0, 0x1e, 0x87, 0xd7, 0x53, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PackageServiceClient is the client API for PackageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PackageServiceClient interface {
	SetFeaturesFromSalesforceProducts(ctx context.Context, in *insysproto.SetFeaturesFromSalesforceProductsRequest, opts ...grpc.CallOption) (*insysproto.SetFeaturesFromSalesforceProductsResponse, error)
}

type packageServiceClient struct {
	cc *grpc.ClientConn
}

func NewPackageServiceClient(cc *grpc.ClientConn) PackageServiceClient {
	return &packageServiceClient{cc}
}

func (c *packageServiceClient) SetFeaturesFromSalesforceProducts(ctx context.Context, in *insysproto.SetFeaturesFromSalesforceProductsRequest, opts ...grpc.CallOption) (*insysproto.SetFeaturesFromSalesforceProductsResponse, error) {
	out := new(insysproto.SetFeaturesFromSalesforceProductsResponse)
	err := c.cc.Invoke(ctx, "/packageproto.PackageService/SetFeaturesFromSalesforceProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PackageServiceServer is the server API for PackageService service.
type PackageServiceServer interface {
	SetFeaturesFromSalesforceProducts(context.Context, *insysproto.SetFeaturesFromSalesforceProductsRequest) (*insysproto.SetFeaturesFromSalesforceProductsResponse, error)
}

func RegisterPackageServiceServer(s *grpc.Server, srv PackageServiceServer) {
	s.RegisterService(&_PackageService_serviceDesc, srv)
}

func _PackageService_SetFeaturesFromSalesforceProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(insysproto.SetFeaturesFromSalesforceProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageServiceServer).SetFeaturesFromSalesforceProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packageproto.PackageService/SetFeaturesFromSalesforceProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageServiceServer).SetFeaturesFromSalesforceProducts(ctx, req.(*insysproto.SetFeaturesFromSalesforceProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PackageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "packageproto.PackageService",
	HandlerType: (*PackageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetFeaturesFromSalesforceProducts",
			Handler:    _PackageService_SetFeaturesFromSalesforceProducts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protorepo/services/insys/package.proto",
}
