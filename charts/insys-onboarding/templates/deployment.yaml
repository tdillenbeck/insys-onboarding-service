apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: insys-onboarding
  namespace: insys
  labels:
    chart: "{{ .Chart.Name }}-{{ .Values.image.tag | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: insys-onboarding
      annotations:
        prometheus.io.scrape: "true"
        prometheus.io.path: "/metrics"
        prometheus.io.port: "7777"
    spec:
      containers:
      - image: "{{ .Values.image.registry }}:{{ .Values.image.tag }}"
        name: insys-onboarding
        env:
          - name: VAULT_ADDR
            value: "http://vault.ops:8200"

          {{ if .Values.useConnectString }}
          - name: PG_PRIMARY_CONNECT_STRING
            valueFrom:
              secretKeyRef:
                name: "{{ .Chart.Name }}-db"
                key: primaryconnectstring
          - name: PG_REPLICA_CONNECT_STRING
            valueFrom:
              secretKeyRef:
                name: "{{ .Chart.Name }}-db"
                key: replicaconnectstring
          {{ end }}

          - name: DB_PRIMARY_ADDR
            value: {{ .Values.postgres.dbPrimaryAddr }}
          - name: DB_REPLICA_ADDR
            value: {{ .Values.postgres.dbReplicaAddr }}

          - name: DB_NAME
            value: services
          - name: MAX_IDLE_CONNECTIONS
            value: "{{ .Values.postgres.maxIdleConnections }}"
          - name: MAX_OPEN_CONNECTIONS
            value: "{{ .Values.postgres.maxOpenConnections }}"
          - name: MAX_CONNECTION_LIFETIME
            value: "{{ .Values.postgres.maxConnectionLifetime }}"
          - name: LOG_QUERIES
            value: "{{ .Values.postgres.logQueries }}"
          - name: LOG_LEVEL
            value: "{{ .Values.logLevel }}"
        livenessProbe:
          httpGet:
            path: /liveness
            port: {{ .Values.probes.port }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: {{ .Values.probes.port }}
        resources:
          requests:
            cpu: {{ .Values.requests.cpu }}
            memory: {{ .Values.requests.memory }}
          limits:
            cpu: 100m
            memory: 256Mi
        ports:
        - name: grpc
          containerPort: 9000

      - image: gcr.io/weave-lab/shared/wmetricsd:2018-11-06.2fa17d96elm
        name: wmetricsd
        env:
        - name: ENABLE_PROM
          value: 'true'
        - name: ENABLE_STATSD
          value: 'true'
        resources:
          requests:
            cpu: 15m
            memory: 32Mi   
            
      - name: wlogd
        image: gcr.io/weave-lab/shared/wlogd:2018-11-06.2fa17d96elm
        resources:
          requests:
            cpu: 15m
            memory: 32Mi   
        env:
        - name: SENTRY
          value: 'true'
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

      - name: tracing-agent
        image: weavelab/jaeger-agent:5d5a16b7
        command:
        - /go/bin/agent-linux
        - --collector.host-port=jaeger-collector.data:14267
        resources:
          requests:
            cpu: 15m
            memory: 16Mi

      serviceAccountName: insys-onboarding

      imagePullSecrets:
      - name: gcr-io

